install.packages("tidyverse")
library("dplyr")
starwars
str(starws)
str(starwars)
starwars %>% slice(c(10:15))
install.packages("tidyverse")
starwars %>% select(name,ends_with("color"))
aa <- starwars %>% mutate(IMC = mass/height)
aa$IMC
starwars %>% summarise(NN = n())
starwars %>% group_by(species) %>% summarise(n = n(),n >= 2,mass = mean(mass,na.rm = TRUE),)
starwars %>% group_by(species) %>% summarise(n = n(),n >= 2,mass = mean(mass,na.rm = TRUE)) %>% summarise(n>=2, mass>50)
starwars %>% group_by(species) %>% summarise(n = n(),mass = mean(mass,na.rm = TRUE)) %>% summarise(n>=2, mass>50)
starwars %>% group_by(species) %>% summarise(n = n(),mass = mean(mass,na.rm = TRUE)) %>% summarise(mass>50)
starwars %>% group_by(species) %>% summarise(n = n(),mass = mean(mass,na.rm = TRUE)) %>% filter(n>2, mass > 50)
starwars %>% group_by(species) %>% summarise(n = n(),mass = mean(mass,na.rm = TRUE)) %>% filter(n>=2, mass > 50)
x <- c(1,2,3,3,5,3,2,4,NA)
factor(x)
x <- c(11,22,47,47,11, 47, 11)
factor(x, levels=c(11, 22, 47), ordered=TRUE)
z <- c("p", "a" , "g", "t", "b")
factor(z[3]) <- "b"
z[3] <- "b"
z <- factor(c("p", "q", "p", "r", "q")) 
z <- factor(c("p", "q", "p", "r", "q"))
z
levels(z)
levels(z)["p"]
levels(z)[levels(z) == "p"] <- "w"
levels(z)
iris
levels(iris)
install.packages("tidyverse")
install.packages("tidyverse")
table(iris)
iris$Sepal.Length = factor(iris$Sepal.Length,levels = c(1,2,3,4,5))
levels(iriss)
levels(iris)
str(iris)
table(cut(iris, breaks = 0:6))
table(cut(iris$Sepal.Length, breaks = 0:6))
iris = iris
iris
View(iris)
rm = iris
rm(iris)
rm(rm)
iris
cut(iris$Sepal.Length, break=5:10)
cut(iris$Sepal.Length, breaks=5:10)
cut(iris$Sepal.Length, breaks=4:10)
table(cut(iris$Sepal.Length, breaks=4:10))
cut(iris$Sepal.Length, breaks=4:9)
table(cut(iris$Sepal.Length, breaks=4:10))
table(cut(iris$Sepal.Length, breaks=4:9))
factor(cut(iris$Sepal.Length,5))
iris$Sepal.Length=factor(cut(iris$Sepal.Length,5))
iris
table(iris)
rm(iris)
iris %>% group_by(iris$Species) %>% filter(iris$Sepal.Length > 5)
irir %>% summarise(iris$Species="setosa",iris$Species="versicolor",iris$Species="virginica")
iris %>% summarise(iris$Species="setosa",iris$Species="versicolor",iris$Species="virginica")
iris %>% group_by(iris$Species)
iris %>% group_by(iris$Species) %>% summarise(N = n())
iris %>% group_by(iris$Species) %>% summarise(N = n()) %>% filter(iris$Sepal.Length >5)
iris %>% summarise(N = n()) %>% filter(iris$Sepal.Length >5)
iris %>% filter(iris$Sepal.Length >5)
str(iris)
table(iris$Species,iris$Petal.Length>5)
table(iris$Petal.Length>5,iris$Species)
table(iris$Petal.Length<5,iris$Species)
responses <- factor(c("Agree", "Agree", "Strongly Agree","Disagree", "Agree"))
responses <- factor(responses, levels=c("Strongly Agree","Agree", "Disagree", "Strongly Disagree"),ordered=TRUE)
responses
#*
x <- factor(c("high","low","medium","high","high","low","medium"))
x <- factor(x,levels=c("high","medium","low"),labels=c(1,2,3))
x
x <- factor(x,levels=c("high","low","medium"),labels=c(1,2,3))
x
x <- factor(c("high","low","medium","high","high","low","medium"))
x <- factor(x,levels=c("high","low","medium"),labels=c(1,2,3))
x
x <- c("high","low","medium","high","high","low","medium")
unique(x)
x <- factor(x,levels=unique(x),labels=c(1,2,3))
x
nombreC = c("Luis", "Balderas", "Ruiz")
paste(substr(nombreC[1],1,2),nombreC[2],nombreC[3])
paste(substr(nombreC[1],1,1),".",nombreC[2],nombreC[3])
paste(substr(nombreC[1],1,1),".",nombreC[2],nombreC[3],sep="")
frase = " un 2 dos 33 dfgñasjdfñoiaj 1243"
strsplit(frase,split=" ")
l = strsplit(frase,split=" ")
class(l)
unlist(l)
class(unlist(l))
cadp = 'a.b.c, d'
strlsplit(cadp,split=".")
strsplit(cadp,split=".")
strsplit(cadp,split=",")
frase = "La clase del master es muy interesante y chuli"
lista = intersect(grep("a",substr(frase,sep=" ")),grep("e",substr(frase,sep=" ")))
lista = intersect(grep("a",split(frase,sep=" ")),grep("e",split(frase,sep=" ")))
split(frase,sep= " ")
split
lista = intersect(grep("a",strsplit(frase,sep=" ")),grep("e", strsplit(frase,sep=" ")))
strsplit
strsplit(frase,split= " ")
lista = intersect(grep("a",strsplit(frase,split=" ")),grep("e", strsplit(frase,split=" ")))
lista
grep("a",strsplit(frase,split=" "))
lista = intersect(grep("[a]",strsplit(frase,split=" ")),grep("[e]", strsplit(frase,split=" ")))
lista
grep("[a]",strsplit(frase,split=" "))
strsplit(frase, split= " ")
frase_div =strsplit(frase, split= " ")
grep("[a]",frase_div)
grep("[a]",unlist(frase_div," "))
lista = intersect(grep("a",unlist(strsplit(frase,split=" ")," "),grep("e", unlist(strsplit(frase,split=" "))," "))
lista
lista
lista = intersect(grep("[a]",unlist(strsplit(frase,split=" ")," "),grep("[e]", unlist(strsplit(frase,split=" "))," ")))
lista
lista = intersect(grep("[a]",unlist(strsplit(frase,split=" ")," ")), grep("[e]", unlist(strsplit(frase,split=" "))," "))
lista
lista = intersect(grep("[a]",unlist(strsplit(frase,split=" "))), grep("[e]", unlist(strsplit(frase,split=" "))))
lista
n = scan("")
n
s = scan("",what = character())
s
s = scan("",what = character())
s
cad = rep(s = scan("",what=character()),n)
cad
n = scan("")
n = scan("")
s = scan("",what = character())
cad = rep(s,n)
cad
v = 1:10
pos = v%%2 != 0
v[pos]
length(v[pos])
fechas = c("01-01-2019","01-02-2019","01-03-2019","01-04-2019","01-05-2019","01-06-2019","01-07-2019")
posiciones = as.numeric(split(fechas,4,5)) %% 2 != 0
fechas[posiciones]
posiciones = as.numeric(split(fechas,4,5)) %% 2 != 0
split(fechas,4,5)
fechas = c("01-01-2019","01-02-2019","01-03-2019","01-04-2019","01-05-2019","01-06-2019","01-07-2019")
meses_impares = as.numeric(substr(fechas,4,5)) %% 2 != 0
fechas[meses_impares]
dia = 1:31
mes = 1:12
anno = 2012:2017
as.Date(dia,mes,anno)
dates = paste(dia,"-",mes,"-",anno)
dates
dates = paste(dia,"-",mes,"-",anno,sep="")
fechas = as.Date(dates)
fechas
write.table(matrix(seq(from=2,to=20,by=2),nrow=10),"dos.txt",row.names = FALSE, col.names = FALSE)
read.table("Ejercicios-20191018/dos.txt")
read.table("Ejercicios-20191018/dos.txt",header=F)
cbind(read.table("Ejercicios-20191018/dos.txt",header=F),read.table("Ejercicios-20191018/tres.txt",header=F))
cbind(read.table("Ejercicios-20191018/dos.txt",header=F),read.table("Ejercicios-20191018/tres.txt",header=F),read.table("Ejercicios-20191018/cinco.txt",header=F))
M = cbind(read.table("Ejercicios-20191018/dos.txt",header=F),read.table("Ejercicios-20191018/tres.txt",header=F),read.table("Ejercicios-20191018/cinco.txt",header=F))
write.table(M[1:5,],file="inicio.txt",sep=",")
M[1,1]
write.table(M[1:5,],file="inicio.txt",sep=",",row.names = F,col.names=F)
M[-5,]
M[:-5,]
M[-5:,]
M[-5:10,]
M[-5:0,]
write.table(M[-5:0,],file="fin.txt",sep=",",row.names = F,col.names=F)
f = scan("")
p = print("#")
rep(p,f)
f = scan("")
c = scan("")
p = print("#")
rep(p,f)
print(#)
d
;
print('#')
rep(rep(p,f),c)
p = cat('x')
rep(p,f)
f = scan("")
f = scan("")
rep(p,f)
p = cat('x')
rep(p,f)
p = print('x')
rep(p,f)
t = rep(p,f)
rep(t,c)
rep(p,f)
print(x)
impares = function(v){
pos = v%%2 != 0
return(length(pos))
}
impares(1:10)
impares = function(v){
pos = v%%2 != 0
return(length(v[pos]))
}
impares(1:10)
cambio = function(M){
pos = is.na(M)
M[pos] = 0
return(M)
}
M = c(1,2,NA)
cambio(M)
u = c(1,1,1,1,2)
u
unique(u)
c = unique(u)
c
c[1]
unir = function(u,v){
return(union(unique(u),unique(v)))
}
unir(c(1,1,2,3),c(2,3,5,5,7))
cadena = "hola"
grep([:h:],cadena)
grep("h",cadena)
cadena = "holah"
grep("h",cadena)
grep("l",cadena)
gregexpr("l",cadena)
which(strsplit(cadena, "")[[1]]=="h")
v = 1:20
grep(1,v)
grep("1",v)
grep([:1:],v)
match(v,1)
which(1 %in% v)
c = c(1,2,3,4,1)
which(1 %in% c)
match(1,c)
c
match(7,c)
c
c[1:]
c[1:,]
c[1:]
c[2:3]
c[-1]
c[-2]
c[-2:0]
c[-2:0]
c[-3:0]
c[-1:0]
partir = function(v,x,y){
pos_x = match(x,v)
pos_y = match(y,v)
if (is.na(pos_y) == F)
return(v[pos_x:pos_y])
else
return(v[-pos_x+1:0])
}
c
partir(c,2,4)
partir(c,2,5)
c[-1:0]
partir = function(v,x,y){
pos_x = match(x,v)
pos_y = match(y,v)
if (is.na(pos_y) == F)
return(v[pos_x:pos_y])
else
return(v[(-pos_x+1):0])
}
partir(c,2,5)
partir = function(v,x,y){
pos_x = match(x,v)
pos_y = match(y,v)
ifelse(is.na(pos_y) == F, return(v[pos_x:pos_y]),return(v[(-pos_x+1):0]))
}
partir = function(v,x,y){
pos_x = match(x,v)
pos_y = match(y,v)
ifelse(is.na(pos_y) == F, return(v[pos_x:pos_y]),return(v[(-pos_x+1):0]))
}
v = 1:10
partir(v,2,7)
partir(v,8,15)
creciente = function(v){
crec = v[0] <= v[1]
i = 2
while(crec & (i+1)<length(v)){
crec = v[i] <= v[i+1]
}
return(crec)
}
c = 1:10
creciente(c)
length(c)
creciente = function(v){
crec = v[0] <= v[1]
i = 2
while(crec && (i+1)<length(v)){
crec = v[i] <= v[i+1]
}
return(crec)
}
creciente(c)
creciente = function(v){
crec = v[0] <= v[1]
i = 2
while(crec && (i+1)<length(v)){
crec = v[i] <= v[i+1]
i = i+1
}
return(crec)
}
creciente(1:10)
creciente = function(v){
crec = v[0] <= v[1]
i = 2
while(crec & (i+1)<length(v)){
crec = v[i] <= v[i+1]
i = i+1
}
return(crec)
}
creciente(1:10)
creciente = function(v){
crec = v[0] <= v[1]
i = 2
l = length(v)
while(crec & (i+1)<l){
crec = v[i] <= v[i+1]
i = i+1
}
return(crec)
}
creciente(1:10)
i = 1
l = length(1:10)
i+1 < l
creciente = function(v){
crec = v[1] <= v[2]
i = 3
l = length(v)
while(crec & (i+1)<l){
crec = v[i] <= v[i+1]
i = i+1
}
return(crec)
}
creciente(1:10)
creciente(10:1)
montecarlo = function(N){
hits = 0
for(i in c(1:N)){
r = runif(2,0,1)
if(r[2]<r[1]^2)
hits = hits + 1
}
return(hits/N)
}
montecarlo(10)
montecarlo(10000)
montecarlo(10000000)
